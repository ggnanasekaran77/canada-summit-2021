version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elasticsearch
    volumes:
      - ./data01:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - jenkins
  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - jenkins
  jenkins_docker:
    container_name: jenkins_docker
    image: docker:dind
    privileged: true
    hostname: jenkins_docker 
    ports:
      - "2376:2376"
    environment:
      DOCKER_TLS_CERTDIR: "/certs"
    volumes:
      - "jenkins-docker-certs:/certs/client"
      - "jenkins-data:/var/jenkins_home"
    networks:
      - jenkins
  configserver:
    container_name: configserver
    image: ggnanasekaran77/configserver
    ports:
      - "8888:8888"
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:8888/ || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 3
    hostname: configserver
    networks:
      - jenkins
  jenkins:
    build: ./jenkins
    image: ggnanasekaran77/jenkins
    container_name: jenkins
    volumes:
      - "jenkins-data:/var/jenkins_home"
      - "./jenkins/shared-lib:/tmp/shared-lib"
      - "jenkins-docker-certs:/certs/client:ro"
    environment:
      CASC_JENKINS_CONFIG: "/usr/share/jenkins/ref/jenkins.yml"
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
      DOCKER_HOST: "tcp://jenkins_docker:2376"
      DOCKER_CERT_PATH: "/certs/client"
      DOCKER_TLS_VERIFY: 1
    ports:
      - "8080:8080"
      - "50000:50000"
    depends_on:
      - configserver
      - jenkins_docker
    links:
      - configserver
      - jenkins_docker
    networks:
      - jenkins
    extra_hosts:
      - "host.docker.internal:host-gateway"
networks:
  jenkins:
    driver: bridge
volumes:
  jenkins-docker-certs:
  jenkins-data:
